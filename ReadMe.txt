|      Method |                     Mean |                Error |            StdDev |
|----------------------------------------------------------------------------------------
100 строк 5 символов
| VsStrConcat |      1.009 us |   0.0123 us |     0.0109 us |
|        VsSB     |      1.258 us |   0.0151 us |     0.0141 us |
|    VsStrSum  |      1.345 us |   0.0138 us |     0.0115 us |
|    VsStrCyc   |    22.117 us |   0.2455 us |     0.2176 us |
----------------------------------------------------------------------------------------------
200 строк 200 символов
|         SSB     |      29.974 us |    0.3630 us |     0.3031 us |
|  SStrConcat |      30.811 us |    0.2409 us |     0.2136 us |
|     SStrSum  |       31.496 us |   0.2002 us |     0.1775 us |
|     SStrCyc   |  2,718.392 us | 23.3010 us |   21.7957 us |
------------------------------------------------------------------------------------------------
200 строк 2000 символов
|         LSB     |      257.721 us |     4.1496 us |        3.8815 us |
|  LStrConcat |      730.360 us |   13.5706 us |      12.6939 us |
|     LStrSum  |      735.849 us |     9.2136 us |        8.1676 us |
|     LStrCyc   | 36,649.564 us | 724.3523 us | 1,127.7293 us |



Concat всеггда работает немного быстрее чем сумма. вероятоно из за того что он работает с массивом, а значит изначально знает колличество операций, а сумма работает последовательно (что тоже не вернно, так как скорость выше чем в цикле)
цикл вседа работает намнонго медленее чем все остальное. думаю компилятор оптимизировал отсальные варианты а цикл остался как есть, с постоянным выделением памяти. 
stringbuilder с короткими строками работает  медленее чем Concat но быстрее чем сумма. для средних разница с Concat минимальная, сумма чуть медленее. для длиннных stringbuilder в несколько раз быстрее
вывод: stringbuilder стоит использовать при соеденении большого колличества длинных строк. 






